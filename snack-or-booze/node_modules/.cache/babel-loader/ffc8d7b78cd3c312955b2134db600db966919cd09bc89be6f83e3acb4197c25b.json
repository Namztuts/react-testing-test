{"ast":null,"code":"var _jsxFileName = \"/home/namztuts/SpringBoard/React/28clone/snack-or-booze/src/Item.js\",\n  _s = $RefreshSig$();\nimport { Redirect, useParams } from 'react-router-dom';\nimport { Card, CardBody, CardTitle, CardText } from 'reactstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Item({\n  items,\n  cantFind\n}) {\n  _s();\n  const {\n    id\n  } = useParams();\n  let item = items.find(item => item.id === id);\n  if (!item) return /*#__PURE__*/_jsxDEV(Redirect, {\n    to: cantFind\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 22\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(CardBody, {\n        children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n          className: \"font-weight-bold text-center\",\n          children: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(CardText, {\n          className: \"font-italic\",\n          children: item.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Recipe:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 19\n          }, this), \" \", item.recipe]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Serve:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 19\n          }, this), \" \", item.serve]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 10\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 7\n  }, this);\n}\n_s(Item, \"yQgCIz/jJfqV1l9s2yoba81MT5A=\", false, function () {\n  return [useParams];\n});\n_c = Item;\nexport default Item;\nvar _c;\n$RefreshReg$(_c, \"Item\");","map":{"version":3,"names":["Redirect","useParams","Card","CardBody","CardTitle","CardText","jsxDEV","_jsxDEV","Item","items","cantFind","_s","id","item","find","to","fileName","_jsxFileName","lineNumber","columnNumber","children","className","name","description","recipe","serve","_c","$RefreshReg$"],"sources":["/home/namztuts/SpringBoard/React/28clone/snack-or-booze/src/Item.js"],"sourcesContent":["import { Redirect, useParams } from 'react-router-dom';\nimport { Card, CardBody, CardTitle, CardText } from 'reactstrap';\n\nfunction Item({ items, cantFind }) {\n   const { id } = useParams();\n\n   let item = items.find((item) => item.id === id);\n   if (!item) return <Redirect to={cantFind} />;\n\n   return (\n      <section>\n         <Card>\n            <CardBody>\n               <CardTitle className=\"font-weight-bold text-center\">\n                  {item.name}\n               </CardTitle>\n               <CardText className=\"font-italic\">{item.description}</CardText>\n               <p>\n                  <b>Recipe:</b> {item.recipe}\n               </p>\n               <p>\n                  <b>Serve:</b> {item.serve}\n               </p>\n            </CardBody>\n         </Card>\n      </section>\n   );\n}\n\nexport default Item;\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,kBAAkB;AACtD,SAASC,IAAI,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjE,SAASC,IAAIA,CAAC;EAAEC,KAAK;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EAChC,MAAM;IAAEC;EAAG,CAAC,GAAGX,SAAS,CAAC,CAAC;EAE1B,IAAIY,IAAI,GAAGJ,KAAK,CAACK,IAAI,CAAED,IAAI,IAAKA,IAAI,CAACD,EAAE,KAAKA,EAAE,CAAC;EAC/C,IAAI,CAACC,IAAI,EAAE,oBAAON,OAAA,CAACP,QAAQ;IAACe,EAAE,EAAEL;EAAS;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;EAE5C,oBACGZ,OAAA;IAAAa,QAAA,eACGb,OAAA,CAACL,IAAI;MAAAkB,QAAA,eACFb,OAAA,CAACJ,QAAQ;QAAAiB,QAAA,gBACNb,OAAA,CAACH,SAAS;UAACiB,SAAS,EAAC,8BAA8B;UAAAD,QAAA,EAC/CP,IAAI,CAACS;QAAI;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CAAC,eACZZ,OAAA,CAACF,QAAQ;UAACgB,SAAS,EAAC,aAAa;UAAAD,QAAA,EAAEP,IAAI,CAACU;QAAW;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAW,CAAC,eAC/DZ,OAAA;UAAAa,QAAA,gBACGb,OAAA;YAAAa,QAAA,EAAG;UAAO;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,KAAC,EAACN,IAAI,CAACW,MAAM;QAAA;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3B,CAAC,eACJZ,OAAA;UAAAa,QAAA,gBACGb,OAAA;YAAAa,QAAA,EAAG;UAAM;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,KAAC,EAACN,IAAI,CAACY,KAAK;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzB,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEhB;AAACR,EAAA,CAxBQH,IAAI;EAAA,QACKP,SAAS;AAAA;AAAAyB,EAAA,GADlBlB,IAAI;AA0Bb,eAAeA,IAAI;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}