{"ast":null,"code":"var _jsxFileName = \"/home/namztuts/SpringBoard/React/28clone/snack-or-booze/src/0NewItemForm.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport SnackOrBoozeApi from './Api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewItemForm = ({\n  addColor\n}) => {\n  _s();\n  // NOTE: have a toggle for if it is a drink or snack?\n  const INITIAL_FORM_STATE = {\n    id: '',\n    name: '',\n    description: '',\n    recipe: '',\n    serve: ''\n  };\n  const [formData, setFormData] = useState(INITIAL_FORM_STATE);\n  const [items, setItems] = useState([]);\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target; //grabbing both the value and the input 'name' property\n    //the [name] as the key is used to set name as an inital key | used when creating an object so we don't have to initialize it before\n    setFormData(formData => ({\n      // the formData state is being updated with existing formData (...spread) and then the new name (associated with each input) and value from that input\n      ...formData,\n      [name]: value\n    }));\n  };\n\n  // NOTE: need to use this and maybe move to a different component | might not need this because we are just sending a POST request\n  const addItem = newItem => {\n    setItems(items => [...items, {\n      ...newItem,\n      id: formData.name.toLowerCase()\n    }]);\n  };\n  const history = useHistory();\n  // const navigate = useNavigate();\n\n  // NOTE: need to handle submit with the above addItem function | this should do an API request | everything so far is working\n  const handleSubmit = event => {\n    event.preventDefault();\n    // SnackOrBoozeApi.addItem({ ...formData });\n    // addColor({ ...formData }); //being brought down from ShoppingList\n    history.goBack(); //back to the items list after form is submitted\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"NewItemForm\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"NewItemForm-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"name\",\n        type: \"text\",\n        name: \"name\",\n        placeholder: \"Name\",\n        value: formData.name,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"NewItemForm-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"description\",\n        children: \"Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"description\",\n        type: \"text\",\n        name: \"description\",\n        placeholder: \"Description\",\n        value: formData.description,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"NewItemForm-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"recipe\",\n        children: \"Recipe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"recipe\",\n        type: \"text\",\n        name: \"recipe\",\n        placeholder: \"Recipe\",\n        value: formData.recipe,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"NewItemForm-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"serve\",\n        children: \"Serve\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"serve\",\n        type: \"text\",\n        name: \"serve\",\n        placeholder: \"Serve\",\n        value: formData.serve,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"NewItemForm-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"add\",\n        children: \"Add Item\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"cancel\",\n        onClick: () => history.goBack(),\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 7\n  }, this);\n};\n_s(NewItemForm, \"TV5P/bbt4icDXT5a7h1yiDxzFdg=\", false, function () {\n  return [useHistory];\n});\n_c = NewItemForm;\nexport default NewItemForm;\nvar _c;\n$RefreshReg$(_c, \"NewItemForm\");","map":{"version":3,"names":["useState","useHistory","SnackOrBoozeApi","jsxDEV","_jsxDEV","NewItemForm","addColor","_s","INITIAL_FORM_STATE","id","name","description","recipe","serve","formData","setFormData","items","setItems","handleChange","event","value","target","addItem","newItem","toLowerCase","history","handleSubmit","preventDefault","goBack","className","onSubmit","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","onClick","_c","$RefreshReg$"],"sources":["/home/namztuts/SpringBoard/React/28clone/snack-or-booze/src/0NewItemForm.js"],"sourcesContent":["import { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport SnackOrBoozeApi from './Api';\nconst NewItemForm = ({ addColor }) => {\n   // NOTE: have a toggle for if it is a drink or snack?\n   const INITIAL_FORM_STATE = {\n      id: '',\n      name: '',\n      description: '',\n      recipe: '',\n      serve: '',\n   };\n   const [formData, setFormData] = useState(INITIAL_FORM_STATE);\n   const [items, setItems] = useState([]);\n\n   const handleChange = (event) => {\n      const { name, value } = event.target; //grabbing both the value and the input 'name' property\n      //the [name] as the key is used to set name as an inital key | used when creating an object so we don't have to initialize it before\n      setFormData((formData) => ({\n         // the formData state is being updated with existing formData (...spread) and then the new name (associated with each input) and value from that input\n         ...formData,\n         [name]: value,\n      }));\n   };\n\n   // NOTE: need to use this and maybe move to a different component | might not need this because we are just sending a POST request\n   const addItem = (newItem) => {\n      setItems((items) => [\n         ...items,\n         { ...newItem, id: formData.name.toLowerCase() },\n      ]);\n   };\n\n   const history = useHistory();\n   // const navigate = useNavigate();\n\n   // NOTE: need to handle submit with the above addItem function | this should do an API request | everything so far is working\n   const handleSubmit = (event) => {\n      event.preventDefault();\n      // SnackOrBoozeApi.addItem({ ...formData });\n      // addColor({ ...formData }); //being brought down from ShoppingList\n      history.goBack(); //back to the items list after form is submitted\n   };\n\n   return (\n      <form\n         className=\"NewItemForm\"\n         onSubmit={handleSubmit}\n      >\n         <div className=\"NewItemForm-input\">\n            <label htmlFor=\"name\">Name</label>\n            <input\n               id=\"name\"\n               type=\"text\"\n               name=\"name\"\n               placeholder=\"Name\"\n               value={formData.name}\n               onChange={handleChange}\n            />\n         </div>\n\n         <div className=\"NewItemForm-input\">\n            <label htmlFor=\"description\">Description</label>\n            <input\n               id=\"description\"\n               type=\"text\"\n               name=\"description\"\n               placeholder=\"Description\"\n               value={formData.description}\n               onChange={handleChange}\n            />\n         </div>\n\n         <div className=\"NewItemForm-input\">\n            <label htmlFor=\"recipe\">Recipe</label>\n            <input\n               id=\"recipe\"\n               type=\"text\"\n               name=\"recipe\"\n               placeholder=\"Recipe\"\n               value={formData.recipe}\n               onChange={handleChange}\n            />\n         </div>\n\n         <div className=\"NewItemForm-input\">\n            <label htmlFor=\"serve\">Serve</label>\n            <input\n               id=\"serve\"\n               type=\"text\"\n               name=\"serve\"\n               placeholder=\"Serve\"\n               value={formData.serve}\n               onChange={handleChange}\n            />\n         </div>\n\n         <div className=\"NewItemForm-buttons\">\n            <button className=\"add\">Add Item</button>\n            <button\n               className=\"cancel\"\n               onClick={() => history.goBack()}\n            >\n               Cancel\n            </button>\n         </div>\n      </form>\n   );\n};\n\nexport default NewItemForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}